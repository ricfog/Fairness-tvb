library(dplyr)
library(ggplot2)
library(readstata13)
library(glmnet)
library(sfsmisc)
library(magick)
library(ranger)
library(e1071)
library(gridExtra)
df <- read_csv(here('dfA', 'COMPAS', 'compas-scores-two-years.csv')) %>%
filter(race == 'African-American' | race == 'Caucasian')
library(readr)
df <- read_csv(here('dfA', 'COMPAS', 'compas-scores-two-years.csv')) %>%
filter(race == 'African-American' | race == 'Caucasian')
library(readr)
df <- read_csv(here('dfA', 'COMPAS', 'compas-scores-two-years.csv')) %>%
filter(race == 'African-American' | race == 'Caucasian')
library(here)
df <- read_csv(here('dfA', 'COMPAS', 'compas-scores-two-years.csv')) %>%
filter(race == 'African-American' | race == 'Caucasian')
df <- read_csv(here('DATA', 'COMPAS', 'compas-scores-two-years.csv')) %>%
filter(race == 'African-American' | race == 'Caucasian')
### formulas
covariates <- paste0(c('sex', 'age', 'priors_count',
'juv_fel_count', 'race'),collapse = '+')
n <- dim(df)[1]
non_recid <- length(which(df$is_recid == 0))
n_black <- length(which(df$race == 'African-American'))
n_white <- n - n_black
prediction <- glm(paste0(c('is_recid',covariates), collapse = '~'),
df, family = binomial(link = "logit"))$fitted.values
df <- df[order(prediction),]
prediction <- sort(prediction)
scale <- 1000
x_grid <- seq(0,1,length=scale)
x_grid_mat_black <- matrix(rep(x_grid, n_black), ncol = n_black)
x_grid_mat_white <- matrix(rep(x_grid, n_white), ncol = n_white)
df$true_recid <- df$is_recid
rows_w_non_recid <- which(df$race == 'Caucasian' & df$true_recid == 0)
non_recid_w <- length(which(df$race == 'Caucasian' & df$is_recid == 0))
recid_w <- length(which(df$race == 'Caucasian' & df$is_recid == 1))
formula <- paste0(c('true_recid',covariates), collapse = '~')
# select threshold
for(x in x_grid){
if(sum(x>=prediction)>=n-non_recid){
break
}
}
u <- x
ks_sel <-  c(round(u*scale):scale)
ks_dist_pos <- c()
ks_dist_neg <- c()
type <- c()
for(alpha in seq(0.01,0.12,by=0.01)){
K <- round(n_white*alpha)
print(K)
iter <- 10
ks_dist <- c()
for(i in 1:iter){
df$true_recid <- df$is_recid
flipped <- sample(rows_w_non_recid, K, replace = F)
df[flipped,c('true_recid')] <- 1
#flipped_pred <- ranger(formula, df, probability = TRUE)$predictions[,2]
flipped_pred <- glm(formula, df, family = binomial(link = "logit"))$fitted.values
flipped_pred_black <- flipped_pred[which(df$race == 'African-American')]
flipped_cdf_black <- x_grid_mat_black - matrix(rep(flipped_pred_black, scale), ncol = n_black, byrow = T)
flipped_cdf_black <- (flipped_cdf_black>=0)%*%rep(1,n_black)/n_black
flipped_pred_white <- flipped_pred[which(df$race == 'Caucasian')]
flipped_cdf_white <- x_grid_mat_white - matrix(rep(flipped_pred_white, scale), ncol = n_white, byrow = T)
flipped_cdf_white <- (flipped_cdf_white>=0)%*%rep(1,n_white)/n_white
ks_dist_pos <- c(ks_dist_pos, max(flipped_cdf_white[ks_sel]-flipped_cdf_black[ks_sel]))
ks_dist_neg <- c(ks_dist_neg, max(flipped_cdf_black[ks_sel]-flipped_cdf_white[ks_sel]))
}
type <- c(type, rep(round(K/n_white,2),iter))
}
df_pos <- data.frame(D = ks_dist_pos, Type = as.factor(type))
df_neg <- data.frame(D = ks_dist_neg, Type = as.factor(type))
scaling <- scales::seq_gradient_pal("black", "grey")(seq(0,1,length.out=length(unique(type))))
ymax <- 300
g1 <- ggplot(df_pos, aes(D, group = Type)) + geom_density(aes(fill = Type)) +
theme_bw() +
labs(fill=expression(alpha), x = expression(D^{'-'})) +
scale_fill_manual(values=scaling, guide = FALSE) +
xlim(0,0.3) +
ylim(0,ymax)
g2 <- ggplot(df_neg, aes(D, group = Type)) + geom_density(aes(fill = Type)) +
theme_bw() +
labs(fill=expression(alpha), x = expression(D^{'+'})) +
scale_fill_manual(values=scaling) +
xlim(0,0.3) +
ylim(0,ymax) +
geom_segment(aes(x = 0, y = 0, xend = 0, yend = ymax-1e-10), col = 'black')
grid.arrange(g1, g2, ncol=2)
rm(list=ls())
# ------------------------------------------------------------------------------
## load packages
library(dplyr)
library(ggplot2)
library(readstata13)
library(glmnet)
library(sfsmisc)
library(magick)
library(ranger)
library(e1071)
library(gridExtra)
library(readr)
library(here)
# ------------------------------------------------------------------------------
# load data
df <- read_csv(here('DATA', 'COMPAS', 'compas-scores-two-years.csv')) %>%
filter(race == 'African-American' | race == 'Caucasian')
# ------------------------------------------------------------------------------
# set regression
# formula
covariates <- paste0(c('sex', 'age', 'priors_count',
'juv_fel_count', 'race'),collapse = '+')
# cardinality data
n <- dim(df)[1]
non_recid <- length(which(df$is_recid == 0))
n_black <- length(which(df$race == 'African-American'))
n_white <- n - n_black
# run regression
prediction <- glm(paste0(c('is_recid',covariates), collapse = '~'),
df, family = binomial(link = "logit"))$fitted.values
# reorder data according to score
df <- df[order(prediction),]
prediction <- sort(prediction)
scale <- 1000
x_grid <- seq(0,1,length=scale)
x_grid_mat_black <- matrix(rep(x_grid, n_black), ncol = n_black)
x_grid_mat_white <- matrix(rep(x_grid, n_white), ncol = n_white)
x_grid_mat_black
# set true outcome
df$true_recid <- df$is_recid
rows_w_non_recid <- which(df$race == 'Caucasian' & df$true_recid == 0)
non_recid_w <- length(which(df$race == 'Caucasian' & df$is_recid == 0))
recid_w <- length(which(df$race == 'Caucasian' & df$is_recid == 1))
formula <- paste0(c('true_recid',covariates), collapse = '~')
# select threshold
for(x in x_grid){
if(sum(x>=prediction)>=n-non_recid){
break
}
}
u <- x
ks_sel <-  c(round(u*scale):scale)
ks_dist_pos <- c()
ks_dist_neg <- c()
type <- c()
for(alpha in seq(0.01,0.12,by=0.01)){
K <- round(n_white*alpha)
print(K)
iter <- 10
ks_dist <- c()
for(i in 1:iter){
df$true_recid <- df$is_recid
flipped <- sample(rows_w_non_recid, K, replace = F)
df[flipped,c('true_recid')] <- 1
#flipped_pred <- ranger(formula, df, probability = TRUE)$predictions[,2]
flipped_pred <- glm(formula, df, family = binomial(link = "logit"))$fitted.values
flipped_pred_black <- flipped_pred[which(df$race == 'African-American')]
flipped_cdf_black <- x_grid_mat_black - matrix(rep(flipped_pred_black, scale), ncol = n_black, byrow = T)
flipped_cdf_black <- (flipped_cdf_black>=0)%*%rep(1,n_black)/n_black
flipped_pred_white <- flipped_pred[which(df$race == 'Caucasian')]
flipped_cdf_white <- x_grid_mat_white - matrix(rep(flipped_pred_white, scale), ncol = n_white, byrow = T)
flipped_cdf_white <- (flipped_cdf_white>=0)%*%rep(1,n_white)/n_white
ks_dist_pos <- c(ks_dist_pos, max(flipped_cdf_white[ks_sel]-flipped_cdf_black[ks_sel]))
ks_dist_neg <- c(ks_dist_neg, max(flipped_cdf_black[ks_sel]-flipped_cdf_white[ks_sel]))
}
type <- c(type, rep(round(K/n_white,2),iter))
}
